// Являются ли фрагменты кода ниже эквивалентными? Другими словами, ведут ли они себя одинаково во всех обстоятельствах, для всех переданных им обработчиков?

// promise.then(f1).catch(f2);
// Против:

// promise.then(f1, f2);
// 1. promise.then(f1).catch(f2);:
//    - Здесь метод then принимает первый аргумент (функцию f1), который выполнится при успешном завершении промиса, 
//    и возвращает новый промис. Если этот новый промис отклоняется (например, если f1 вызывает Promise.reject() или выбрасывает исключение), 
//    то его можно обработать с помощью метода catch, который будет вызываться с функцией f2.

// 2. promise.then(f1, f2);:
//    - В этом случае метод then сразу принимает две функции. Первая — для успешного завершения, вторая — для обработки отклонения. 
//    Если промис будет отклонен, f2 будет вызвана автоматически.