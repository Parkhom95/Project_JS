
// Следующий код создаёт массив из стрелков (shooters).

// Каждая функция предназначена выводить их порядковые номера. Но что-то пошло не так…

// function makeArmy() {
//   let shooters = [];

//   let i = 0;
//   while (i < 10) {
//     let shooter = function() { // функция shooter
//       alert( i ); // должна выводить порядковый номер
//     };
//     shooters.push(shooter); // и добавлять стрелка в массив
//     i++;
//   }

//   // ...а в конце вернуть массив из всех стрелков
//   return shooters;
// }

// let army = makeArmy();

// // все стрелки выводят 10 вместо их порядковых номеров (0, 1, 2, 3...)
// army[0](); // 10 от стрелка с порядковым номером 0
// army[1](); // 10 от стрелка с порядковым номером 1
// army[2](); // 10 ...и т.д.
// Почему у всех стрелков одинаковые номера?

// Почините код, чтобы он работал как задумано.

// Проблема в том, что переменная i имеет блочную область видимости,
//  и все функции стрелков ссылаются на одну и ту же переменную i, которая на момент вызова функции равна 
//  10 (значение, которое было ей присвоено после завершения цикла).

function makeArmy() {
    let shooters = [];
  
    for (let i = 0; i < 10; i++) {
      let shooter = (function(index) {
        return function() {
          alert(index); 
        };
      })(i); 
      shooters.push(shooter); 
    }
  
    return shooters;
  }
  
  let army = makeArmy();
  
  army[0](); // 0
  army[1](); // 1
  army[2](); // 2